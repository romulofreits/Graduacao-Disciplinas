# Example 3.1 - The Delivery Time Data (Montgomery et al., 2012, p.74)

## Descrição das variáveis

# y delivery time (in minutes)
# x1 number of cases of product stocked
# x2 distance walked by route driver


install.packages("MPV", repo = "https://lib.ugent.be/CRAN/")
install.packages("corrplot", repo = "https://lib.ugent.be/CRAN/")
install.packages("visreg", repo = "https://lib.ugent.be/CRAN/")
install.packages("rgl", repo = "https://lib.ugent.be/CRAN/")
install.packages("knitr, repo = "https://lib.ugent.be/CRAN/")
install.packages("scatterplot3d", repo = "https://lib.ugent.be/CRAN/")
install.packages("ellipse", repo = "https://lib.ugent.be/CRAN/")
install.packages("tidyverse", repo = "https://lib.ugent.be/CRAN/")
install.packages("ggplot2", repo = "https://lib.ugent.be/CRAN/")
install.packages("Rcmdr", repo = "https://lib.ugent.be/CRAN/")



require(MPV) ## Data Sets from Montgomery, Peck and Vining's Book
require(car)
require(corrplot) # We'll use corrplot later on in this example too.
require(visreg) # This library will allow us to show multivariate graphs.
require(rgl)
require(knitr)
require(scatterplot3d)
require(ellipse)
require(tidyverse)
require(ggplot2)



data(p8.3)
dados=data.frame(p8.3)


## Gráfico de dispersão múltiplo

 ## Forma 1
pairs(p8.3)

 ## Forma 2
newdatacor = cor(dados[1:3])
corrplot(newdatacor, method = "number")

# Forma 3

pairs(dados[,1:3], pch = 19, lower.panel = NULL)

## Forma 4
require(GGally)
ggpairs(dados[,1:3])

  ### Ajuste do MRLM
attach(dados)
ajuste=lm(y~x1+x2)  ## Modelo completo
summary(ajuste)
anova(ajuste)

  ### Gráfico de valores observados vs ajustados

names(ajuste) ## Objetos que podem ser extraidos
Observado <- y
Resíduo <- ajuste$residuals  # resíduo ordinário
Predito <- ajuste$fitted
tabela <- round(data.frame(Observado,Predito,Resíduo),3)
tabela

plot(Observado,Predito,xlab=" Tempo de entrega (min)",ylab="Tempo de entrega predito (min) pelo MRLM",pch=16)
abline(0,1,lty=3,col="red") 

   
### Gráfico em 3D do modelo ajustado

s3d <- scatterplot3d(x1,x2,y,highlight.3d = TRUE, scale.y = 1,type = "h", pch = 16, main = "Plano ajustado via MRLM",zlab="Tempo de entrega (min)",xlab="Número de produtos",ylab="Distância (pés)")
s3d$plane3d(ajuste,col="red")


 ## Contribuição de cada variável
ajuste0=lm(y~1)
ajuste1=lm(y~x1)
ajuste2=lm(y~x2)

### Contribuição das duas
anova(ajuste0,ajuste)

### Contribuição de x_2
anova(ajuste1,ajuste)

### Contribuição de x_1
anova(ajuste2,ajuste)

 #Graficos de elipse - contorno de confiança

#confidence.ellipse(ajuste, Scheffe=TRUE,cex=0.9,col="black")
#plot(ellipse(ajuste),type="l",cex=1.4,col="red",xlab=" ", ylab=" ")
#mtext(expression(hat(beta)[1]), side=1, line=2.0,cex=1.2)
#mtext(expression(hat(beta)[2]), side=2, line=2.0,cex=1.2)
#points(ajuste$coefficients[1], ajuste$coefficients[2],pch=16)

   ## Comando which--> Dizer qual o par de parâmetros queremos. 

## Acho melhor deixar em termos de beta_1 e beta_2
plot(ellipse(ajuste,level=0.95, which = c(2,3)),type="l",cex=1.4,col="red",xlab=" ", ylab=" ")
mtext(expression(beta[2]), side=1, line=2.0,cex=1.2)
mtext(expression(beta[3]), side=2, line=2.0,cex=1.2)
points(ajuste$coefficients[2], ajuste$coefficients[3],pch=16)

## Usando em conjunto o ggplot 2


plot(ellipse(ajuste,level=0.95, which = c(2,3)),type="l",cex=1.4,col="red",xlab=" ", ylab=" ")
#mtext(expression(beta[1]), side=1, line=2.0,cex=1.2)
#mtext(expression(beta[2]), side=2, line=2.0,cex=1.2)
points(ajuste$coefficients[2], ajuste$coefficients[3],pch=16,col="blue")
aux = ellipse(ajuste, level = 0.95, which = c(2,3))
library(ggplot2)
ggplot() +
  geom_polygon(aes(x = aux[,1], y = aux[,2]), alpha = 0.1) +
  geom_point(aes(x = ajuste$coefficients[2], 
                 y = ajuste$coefficients[3]))+
  xlab(expression(beta[1])) + ylab(expression(beta[2]))
dev.copy2pdf(file="figura4.pdf",out.type="cairo")  ## salvando o gráfico em .pdf




 ## Análise de diagnóstico
plot(ajuste)

# Usando as funções envel.norm, diag.norm e dmax.norm

# identificando as observacoes
envel.norm(ajuste, conf=0.95, iden=6)
diag.norm(ajuste,iden=c(2,2,3,2,1,1))
dmax.norm(ajuste,iden=c(2,6,6))

  ## Tentar explicar o motivo das "influências"

